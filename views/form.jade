doctype html
html(lang="en")
  head
    title= title
    script(src="/static/mnemonic.js")
    style.
      body {
        background: white;
        color: black;
        font-family: sans-serif;
      }
      :link, :visited {
        color: darkorange;
      }
      ::selection {
        color: white;
        background: darkorange; /* Safari */
      }
      ::-moz-selection {
        color: white;
        background: darkorange; /* Firefox */
      }

      h1 { font-weight: normal; }

      input {
        margin: .25em;
        padding: .25em;
        font-size: 120%;
        min-width: 40em;
      }
      #footer {
        font-size: 80%;
      }
      #link[href=""] {
        display: none;
      }
  body
    h1 Bug Words!
    p.
      Transform boring old bug numbers into short, memorable URLs. Just paste
      your bug number or bugzilla URL into the form below:
    table
      tr
        td
          label(for="q") Bug:
        td
          form(action="/", method="GET")
            input#q(value=q, placeholder="Enter a bug number or bugzilla link")
      tr
        td
          label(for="url") Link:
        td
          input#url(value=url, readonly)
          | 
          a#link(href=url) (go)
    p Currently works with bugzilla.mozilla.org only.  Future plans include:
    ul
      li Support for other bug tracking sites.
      li Ability to display a list of bugs on a single page.
      li.
        Browser extension/userscript to automatically insert bugwd links on
        other sites.
    hr
    p#footer
      | made by 
      a(href="http://limpet.net/mbrubeck") Matt Brubeck 
      | â€¢ 
      a(href="http://github.com/mbrubeck/bugwd")  source code
    script.
      var q = document.getElementById("q");
      var url = document.getElementById("url");
      var link = document.getElementById("link");

      function selectLink() {
        url.focus();
        url.selectionStart = 0;
        url.selectionEnd = url.value.length;
      }

      function getNumber(str) {
        var matches = str.match(/[0-9]+/);
        return matches && +matches[0];
      }

      function update() {
        var id = getNumber(q.value);
        var words;

        if (id != null) {
          try {
            words = mnemonic.encode_int32(+id);
          } catch (e) {}
        }
        if (words) {
          url.value = link.href = "http://bugwd.com/" + words;
          document.title = "Bug " + id + " (" + words + ")";
        } else {
          url.value = link.href = "";
          document.title = "bugwd";
        }
      }

      q.addEventListener("keypress", function (event) {
        if (event.keyCode == event.DOM_VK_RETURN) {
          selectLink();
          var id = getNumber(q.value);
          if (id == null)
            id = "";
          history.pushState({ q: q.value }, null, "/" + id);
          event.preventDefault();
        }
      }, false);

      window.addEventListener("popstate", function (event) {
        if (event.state && "q" in event.state) {
          q.value = event.state.q;
          update();
        }
      }, false);

      q.addEventListener("input", update, false);
      window.addEventListener("load", function () {
        history.replaceState({ q: q.value }, null, document.URL);
        if (url.value) {
          selectLink();
        } else {
          q.focus();
        }
      }, false);
